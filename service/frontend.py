import streamlit as st
import pandas as pd
from get_course import get_course

import sys
import os
sys.path.append(os.getcwd())

from algos.final_optimizer import optimization, w_o_optimization


@st.cache_data
def load_csv(file):
    return pd.read_csv(file)


@st.cache_data
def load_local_dataset(dataset_num):
    uploaded_payments = f'data\payments_{dataset_num}.csv'
    uploaded_providers = f'data\providers_{dataset_num}.csv'
    ex_rates_file = 'data\ex_rates.csv'
    payments = pd.read_csv(uploaded_payments)
    providers = pd.read_csv(uploaded_providers)
    ex_rates = pd.read_csv(ex_rates_file)
    return payments, providers, ex_rates, uploaded_payments, uploaded_providers, ex_rates_file


st.set_page_config(
    page_title='–§–ª–æ—É–ß–µ–π–Ω',
    page_icon='üìà'
)

st.title('üìà –§–ª–æ—É–ß–µ–π–Ω')
st.header('–í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö')


data_source = st.radio(
    '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:',
    ['–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Ç–æ—Ä–æ–π –¥–∞—Ç–∞—Å–µ—Ç', '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π –¥–∞—Ç–∞—Å–µ—Ç']
)

payments = None
providers = None

if data_source in ['–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Ç–æ—Ä–æ–π –¥–∞—Ç–∞—Å–µ—Ç']:
    dataset_num = '1' if data_source == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç' else '2'
    try:
        payments, providers, ex_rates, uploaded_payments, uploaded_providers, ex_rates_file = load_local_dataset(dataset_num)
        st.success(f'–î–∞—Ç–∞—Å–µ—Ç {dataset_num} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!')
    except FileNotFoundError:
        st.error(f'–§–∞–π–ª—ã –¥–∞—Ç–∞—Å–µ—Ç–∞ {dataset_num} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.')
else:
    st.header('–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤')
    uploaded_payments = st.file_uploader(
        '–ó–∞–≥—Ä—É–∑–∏—Ç–µ Payments:',
        accept_multiple_files=False,
        type='csv',
        key='payments',
        help='–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ payments_1.csv –∏ payments_2.csv'
    )
    
    uploaded_providers = st.file_uploader(
        '–ó–∞–≥—Ä—É–∑–∏—Ç–µ Providers:',
        accept_multiple_files=False,
        type='csv',
        key='providers',
        help='–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ providers_1.csv –∏ providers_2.csv'
    )
    
    ex_rates_file = st.file_uploader(
        '–ó–∞–≥—Ä—É–∑–∏—Ç–µ Ex_Rates:',
        accept_multiple_files=False,
        type='csv',
        key='ex_rates',
        help='–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ex_rates.csv'
    )
    if uploaded_payments and uploaded_providers and ex_rates_file:
        payments = load_csv(uploaded_payments).to_csv('payments_temp.csv', index=False)
        providers = load_csv(uploaded_providers).to_csv('providers_temp.csv', index=False)
        ex_rates = load_csv(ex_rates_file).to_csv('ex_rates_temp.csv', index=False)
        uploaded_payments = 'payments_temp.csv'
        uploaded_providers = 'providers_temp.csv'
        ex_rates_file = 'ex_rates_temp.csv'
        st.success('–§–∞–π–ª—ã payments –∏ providers —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')

if uploaded_payments is not None and uploaded_providers is not None:
    st.header('–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    use_uploaded_ex_rates = st.checkbox(
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç —Å –±–∏—Ä–∂–∏',
        value=False,
        help='–ï—Å–ª–∏ —á–µ–∫–±–æ–∫—Å –≤—ã–±—Ä–∞–Ω, —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –±—É–¥—É—Ç –ø–æ–ª—É—á–µ–Ω—ã —Å –±–∏—Ä–∂–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.'
    )

    if use_uploaded_ex_rates:
        ex_rates = get_course()
        st.info('–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç —Å –±–∏—Ä–∂–∏.')

    if data_source == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç':
        trial_number = 54
        optimal_value = 1074162.7686020422
        optimal_k = [-0.5755060280729672, 0.19288650105021032, 0.8738533920662923, -0.8690379202212117]
        metrics = {
            'Time Spent': '1,393,060.0', 
            'Money Passed in USD': '1,073,497.73', 
            'Success Rate': '26%',
            'Fee in USD': '6,758.80'
        }
        
       # w_o_optimization(uploaded_providers, uploaded_payments, ex_rates_file, optimal_k)
        
        st.subheader('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–ø–æ—á–∫–∏)')
        
        file_path = r'.\results\result_1.csv'
        with open(file_path, 'rb') as f:
            st.download_button(
                label='–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ CSV',
                data=f,
                file_name='result_1.csv',
                mime='text/csv',
            )
        
        st.subheader('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª—É—á—à–µ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏')
        st.markdown(
            f'''
            - **–ù–æ–º–µ—Ä –∏—Å–ø—ã—Ç–∞–Ω–∏—è:** {trial_number}
            - **–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:** {optimal_value:.2f}
            '''
        )

        st.subheader('–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ (k)')
        st.write(optimal_k)

        st.subheader('–ú–µ—Ç—Ä–∏–∫–∏')
        for metric, value in metrics.items():
            st.write(f"**{metric}:** {value}")
            
    elif data_source == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Ç–æ—Ä–æ–π –¥–∞—Ç–∞—Å–µ—Ç':
        trial_number = 26
        optimal_value = 1136394.6537694214
        optimal_k = [0.017245344096524978, 0.32770832537823447, 0.2802537193422929, -0.2777648210606486]
        metrics = {
            'Time Spent': '1,808,654.0', 
            'Money Passed in USD': '1,126,143.63', 
            'Success Rate': '28%',
            'Fee in USD': '2,765.34' 
        }
        
        # w_o_optimization(uploaded_providers, uploaded_payments, ex_rates_file, optimal_k)
        
        st.subheader('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–ø–æ—á–∫–∏)')
        
        file_path = r'.\results\result_2.csv'
        with open(file_path, 'rb') as f:
            st.download_button(
                label='–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ CSV',
                data=f,
                file_name='result_2.csv',
                mime='text/csv',
            )
        
        st.subheader('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª—É—á—à–µ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏')
        st.markdown(
            f'''
            - **–ù–æ–º–µ—Ä –∏—Å–ø—ã—Ç–∞–Ω–∏—è:** {trial_number}
            - **–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:** {optimal_value:.2f}
            '''
        )

        st.subheader('–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ (k)')
        st.write(optimal_k)

        st.subheader('–ú–µ—Ç—Ä–∏–∫–∏')
        for metric, value in metrics.items():
            st.write(f"**{metric}:** {value}") 
 
    else:
        optimization(uploaded_providers, uploaded_payments, ex_rates_file)
        
        st.subheader('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–ø–æ—á–∫–∏)')
        
        file_path = 'result_merged.csv'
        with open(file_path, 'rb') as f:
            st.download_button(
                label='–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ CSV',
                data=f,
                file_name='result_merged.csv',
                mime='text/csv',
        )
        
else:
    st.warning('–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.')