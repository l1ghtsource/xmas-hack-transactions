import streamlit as st
import pandas as pd
from parsers import get_course


@st.cache_data
def load_csv(file):
    return pd.read_csv(file)


st.set_page_config(
    page_title='–§–ª–æ—É–ß–µ–π–Ω',
    page_icon='üìà'
)

st.title('üìà –§–ª–æ—É–ß–µ–π–Ω')
st.header('–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤')

uploaded_payments = st.file_uploader(
    '–ó–∞–≥—Ä—É–∑–∏—Ç–µ Payments:',
    accept_multiple_files=False,
    type='csv',
    key='payments',
    help='–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ payments_1.csv –∏ payments_2.csv'
)

uploaded_providers = st.file_uploader(
    '–ó–∞–≥—Ä—É–∑–∏—Ç–µ Providers:',
    accept_multiple_files=False,
    type='csv',
    key='providers',
    help='–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ providers_1.csv –∏ providers_2.csv'
)

ex_rates_file = st.file_uploader(
    '–ó–∞–≥—Ä—É–∑–∏—Ç–µ Ex_Rates:',
    accept_multiple_files=False,
    type='csv',
    key='ex_rates',
    help='–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ex_rates.csv'
)

if uploaded_payments and uploaded_providers and ex_rates_file:
    st.success('–í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')

    use_uploaded_ex_rates = st.checkbox(
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ex_rates –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞',
        value=True,
        help='–ï—Å–ª–∏ —á–µ–∫–±–æ–∫—Å —Å–Ω—è—Ç, —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –±—É–¥—É—Ç –ø–æ–ª—É—á–µ–Ω—ã —Å –±–∏—Ä–∂–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.'
    )

    if not use_uploaded_ex_rates:
        local_ex_rates_path = get_course()
        st.info('–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç —Å –±–∏—Ä–∂–∏, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —á–µ–∫–±–æ–∫—Å.')
    else:
        ex_rates = load_csv(ex_rates_file)

    payments = load_csv(uploaded_payments)
    providers = load_csv(uploaded_providers)

    st.header('–í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏')

    strategies = {
        '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è': 'balanced',
        '–ú–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏': 'maximize_success',
        '–ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏': 'minimize_time',
        '–ú–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–±—ã–ª–∏': 'maximize_profit',
    }

    selected_strategy = st.radio('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é:', list(strategies.keys()))

    if selected_strategy:
        st.write(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é: {selected_strategy}')

        # —Ç—É—Ç —Å–¥–µ–ª–∞—Ç—å –≤—ã–∑–æ–≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∏–∑ algos
        if strategies[selected_strategy] == 'balanced':
            result = payments
        elif strategies[selected_strategy] == 'maximize_success':
            result = payments
        elif strategies[selected_strategy] == 'minimize_time':
            result = payments
        elif strategies[selected_strategy] == 'maximize_profit':
            result = payments

        st.header('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã')
        csv = result.to_csv(index=False).encode('utf-8')
        st.download_button(
            label='–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ CSV',
            data=csv,
            file_name='result.csv',
            mime='text/csv',
        )
else:
    st.warning('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.')
